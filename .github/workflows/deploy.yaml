name: Pack and Deploy

on:
  workflow_call:
    inputs:
      charm_name:
        required: true
        type: string
      channel:
        required: true
        type: string
      juju_controller_name:
        required: true
        type: string
      juju_model_name:
        required: true
        type: string
      environment:
        required: false
        default: ''
        type: string
      environmentUrl:
        required: false
        default: ''
        type: string

    secrets:
      VAULT_APPROLE_ROLE_ID:
        required: true
      VAULT_APPROLE_SECRET_ID:
        required: true
      CHARMHUB_TOKEN:
        required: true

jobs:
  setup:
    name: Check for charm changes
    runs-on: ubuntu-latest
    outputs:
      charm_changed: ${{ steps.check.outputs.charm_changed }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Check for charm/ changes
        id: check
        run: |
          if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep '^charm/'; then
            echo "charm_changed=true" >> "$GITHUB_OUTPUT"
          else
            echo "charm_changed=false" >> "$GITHUB_OUTPUT"
          fi

  pack-rock:
    name: Pack Rock
    runs-on: ubuntu-latest
    needs: setup
    environment: ${{ inputs.environment }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup LXD
        uses: canonical/setup-lxd@main

      - name: Setup rockcraft
        run: sudo snap install rockcraft --classic

      - name: Pack rock
        run: rockcraft pack

      - name: Upload rock
        id: upload
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.charm_name }}-rock
          path: ./*.rock

  pack-and-upload-charm:
    name: Pack and Upload Charm
    runs-on: ubuntu-latest
    needs: setup
    if: needs.setup.outputs.charm_changed == 'true'
    environment: ${{ inputs.environment }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup LXD
        uses: canonical/setup-lxd@main

      - name: Setup charmcraft
        run: sudo snap install charmcraft --classic --channel=latest/stable

      - name: Fetch libs
        run: |
          cd ./charm
          charmcraft fetch-libs

      - name: Pack charm
        run: charmcraft pack -v --project-dir ./charm

      - name: Upload charm
        env:
          CHARMCRAFT_AUTH: ${{ secrets.CHARMHUB_TOKEN }}
        run: charmcraft upload ./*.charm

  publish-image-and-release-charm:
    name: Publish OCI Image and Release Charm
    runs-on: ubuntu-latest
    needs: [pack-rock, pack-and-upload-charm]
    if: always() && !failure()
    environment: ${{ inputs.environment }}
    outputs:
      image_url: ${{ steps.set_image_url.outputs.image_url }}
    steps:
      - name: Get Rock
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.charm_name }}-rock

      - name: Set image URL
        id: set_image_url
        run: echo "image_url=ghcr.io/${GITHUB_REPOSITORY}:$(date +%s)-${GITHUB_SHA:0:7}" >> $GITHUB_OUTPUT

      - name: Push to GHCR
        run: skopeo --insecure-policy copy oci-archive:$(ls *.rock) docker://${{ steps.set_image_url.outputs.image_url }} --dest-creds "canonical:${{ secrets.GITHUB_TOKEN }}"

      - name: Pull image into registry
        run: docker pull ${{ steps.set_image_url.outputs.image_url }}

      - name: Setup charmcraft
        run: sudo snap install charmcraft --classic --channel=latest/stable

      - name: Upload flask app OCI image
        env:
          CHARMCRAFT_AUTH: ${{ secrets.CHARMHUB_TOKEN }}
        run: charmcraft upload-resource ${{ inputs.charm_name }} flask-app-image --image=$(docker images --format "{{.ID}}" | head -n 1) --verbosity=trace

      - name: Attach resource to charm and release
        env:
          CHARMCRAFT_AUTH: ${{ secrets.CHARMHUB_TOKEN }}
        run: |
          revision_number=$(charmcraft revisions "${{ inputs.charm_name }}" | awk 'NR==2 {print $1}')
          resource_revision_number=$(charmcraft resource-revisions "${{ inputs.charm_name }}" flask-app-image | awk 'NR==2 {print $1}')
          charmcraft release "${{ inputs.charm_name }}" --channel=${{ inputs.channel }} --revision $revision_number --resource flask-app-image:$resource_revision_number

  deploy:
    name: Deploy to Environment
    if: false
    needs: [publish-image-and-release-charm]
    uses: ./.github/workflows/juju_deploy.yaml
    with:
      charm_name: ${{ inputs.charm_name }}
      channel: ${{ inputs.channel }}
      juju_controller_name: ${{ inputs.juju_controller_name }}
      juju_model_name: ${{ inputs.juju_model_name }}
      environment: ${{ inputs.environment || '' }}
      environmentUrl: ${{ inputs.environmentUrl || '' }}
    secrets:
      VAULT_APPROLE_ROLE_ID: ${{ secrets.VAULT_APPROLE_ROLE_ID }}
      VAULT_APPROLE_SECRET_ID: ${{ secrets.VAULT_APPROLE_SECRET_ID }}
